{"app":{"a_sorting_comps":false,"a_sorting_envs":false,"active":true,"app_version":"","name":"Application_1","strict_plan_control":false,"requests_for_export_with_automations":[{"aasm_state":"created","additional_email_addresses":[],"auto_start":false,"description":"Description Request_1","estimate":null,"name":"Request_1","notify_group_only":true,"notify_on_request_cancel":null,"notify_on_request_complete":false,"notify_on_request_hold":false,"notify_on_request_participiant":false,"notify_on_request_planned":false,"notify_on_request_problem":false,"notify_on_request_resolved":false,"notify_on_request_start":false,"notify_on_request_step_owners":false,"notify_on_step_block":false,"notify_on_step_complete":false,"notify_on_step_participiant":false,"notify_on_step_problem":null,"notify_on_step_ready":null,"notify_on_step_requestor_owner":false,"notify_on_step_start":false,"notify_on_step_step_owners":false,"rescheduled":false,"scheduled_at":null,"target_completion_at":null,"wiki_url":"","request_template":{"aasm_state":"pending","name":"Request_1temp","automation_scripts_for_export":[null,{"aasm_state":"pending","automation_category":"General","automation_type":"Automation","content":"###\r\n# hosts:\r\n#   description: IP address remote server - leave blank for step servers\r\n# user:\r\n#   description: Login for remote server\r\n# password:\r\n#   description: Password for remote server - leave blank for public key\r\n#   private: yes\r\n# command:\r\n#   description: Name of command\r\n# sudo:\r\n#   description: Use sudo? (yes or no/blank)\r\n# arguments:\r\n#   description: Arguments to script\r\n###\r\n\r\nhosts = params[\"hosts\"]\r\n\r\nif hosts.length < 2 # use server list\r\n  # Get a list of the servers and properties\r\n  # List is [server_name, {property1=>value1, propery2=>value2 }]\r\n  hosts = []\r\n  servers = get_server_list(params)\r\n  write_to \"Targeting Servers:\"\r\n  servers.each do |server|\r\n    write_to \"  #{server[0]}\"\r\n    hosts << server[0]\r\n  end\r\nend  \r\n\r\nwrite_to \"Executing on Hosts: #{hosts.inspect}\"\r\n role :all do # This tells Capistrano to perform the action on an array of hosts\r\n   hosts\r\n end\r\n\r\n# Run the command on the server\r\nresults = run_command(params, params[\"command\"], params[\"arguments\"])\r\n\r\n# Test the results for success or failure\r\nsuccess = \"a\" # Note: add your success term here\r\nunless results.include?(success)\r\n  write_to \"Success test, looking for #{success}: Command_Failed\"\r\nelse\r\n  write_to \"Success test, looking for #{success}: Success (term not found)\"\r\nend","description":"Description Automation_1","name":"Automation_1"},null,{"aasm_state":"released","automation_category":"General","automation_type":"Automation","content":"###\n# hosts:\n#   description: IP address remote server - leave blank for step servers\n# user:\n#   description: Login for remote server\n# password:\n#   description: Password for remote server - leave blank for public key\n#   private: yes\n# command:\n#   description: Name of command\n# sudo:\n#   description: Use sudo? (yes or no/blank)\n# arguments:\n#   description: Arguments to script\n###\n\nhosts = params[\"hosts\"]\n\nif hosts.length < 2 # use server list\n  # Get a list of the servers and properties\n  # List is [server_name, {property1=>value1, propery2=>value2 }]\n  hosts = []\n  servers = get_server_list(params)\n  write_to \"Targeting Servers:\"\n  servers.each do |server|\n    write_to \"  #{server[0]}\"\n    hosts << server[0]\n  end\nend  \n\nwrite_to \"Executing on Hosts: #{hosts.inspect}\"\n role :all do # This tells Capistrano to perform the action on an array of hosts\n   hosts\n end\n\n# Run the command on the server\nresults = run_command(params, params[\"command\"], params[\"arguments\"])\n\n# Test the results for success or failure\nsuccess = \"a\" # Note: add your success term here\nunless results.include?(success)\n  write_to \"Success test, looking for #{success}: Command_Failed\"\nelse\n  write_to \"Success test, looking for #{success}: Success (term not found)\"\nend","description":"Runs a command on a host via SSH","name":"SSH_Execute"}]},"environment":{"name":"Env_1"},"notes":[],"business_process":{"name":"Process_1"},"release":{"name":"Release_1"},"owner":{"name":"Administrator, John"},"requestor":{"name":"Administrator, John"},"email_recipients":[],"package_contents":[],"steps":[{"aasm_state":"locked","complete_by":null,"component_version":null,"create_new_package_instance":false,"default_tab":null,"description":"","different_level_from_previous":true,"estimate":5,"execute_anytime":false,"latest_package_instance":false,"name":"Step_1-1","own_version":false,"owner_type":"User","procedure":false,"protected_step":false,"script_type":null,"should_execute":true,"start_by":null,"suppress_notification":false,"resource_automation_script":null,"component":{"name":"Comp_1"},"owner":{"name":"Administrator, John"},"work_task":{"name":"WorkTask_1"},"notes":[],"phase":{"archive_number":null,"archived_at":null,"name":"Phase_1","position":1},"runtime_phase":{"name":"RuntimePhase_1","position":2},"temporary_property_values":[],"step_script_arguments":[]},{"aasm_state":"locked","complete_by":null,"component_version":null,"create_new_package_instance":false,"default_tab":null,"description":"","different_level_from_previous":true,"estimate":5,"execute_anytime":false,"latest_package_instance":false,"name":"Step_1-2","own_version":false,"owner_type":"User","procedure":false,"protected_step":false,"script_type":"General","should_execute":true,"start_by":null,"suppress_notification":false,"resource_automation_script":[],"component":{"name":"Comp_2"},"owner":{"name":"Administrator, John"},"notes":[],"temporary_property_values":[],"script":{"automation_category":"General","automation_type":"Automation","content":"###\r\n# hosts:\r\n#   description: IP address remote server - leave blank for step servers\r\n# user:\r\n#   description: Login for remote server\r\n# password:\r\n#   description: Password for remote server - leave blank for public key\r\n#   private: yes\r\n# command:\r\n#   description: Name of command\r\n# sudo:\r\n#   description: Use sudo? (yes or no/blank)\r\n# arguments:\r\n#   description: Arguments to script\r\n###\r\n\r\nhosts = params[\"hosts\"]\r\n\r\nif hosts.length < 2 # use server list\r\n  # Get a list of the servers and properties\r\n  # List is [server_name, {property1=>value1, propery2=>value2 }]\r\n  hosts = []\r\n  servers = get_server_list(params)\r\n  write_to \"Targeting Servers:\"\r\n  servers.each do |server|\r\n    write_to \"  #{server[0]}\"\r\n    hosts << server[0]\r\n  end\r\nend  \r\n\r\nwrite_to \"Executing on Hosts: #{hosts.inspect}\"\r\n role :all do # This tells Capistrano to perform the action on an array of hosts\r\n   hosts\r\n end\r\n\r\n# Run the command on the server\r\nresults = run_command(params, params[\"command\"], params[\"arguments\"])\r\n\r\n# Test the results for success or failure\r\nsuccess = \"a\" # Note: add your success term here\r\nunless results.include?(success)\r\n  write_to \"Success test, looking for #{success}: Command_Failed\"\r\nelse\r\n  write_to \"Success test, looking for #{success}: Success (term not found)\"\r\nend","description":"Description Automation_1","name":"Automation_1"},"step_script_arguments":[{"script_argument_id":16,"script_argument_type":"ScriptArgument","value":[[""]],"script_argument":{"argument":"arguments","argument_type":"in-text","name":"Arguments to script","position":"A6:B6","script":{"name":"Automation_1","template_script_type":"GeneralScript"}}},{"script_argument_id":15,"script_argument_type":"ScriptArgument","value":[[""]],"script_argument":{"argument":"sudo","argument_type":"in-text","name":"Use sudo? (yes or no/blank)","position":"A5:B5","script":{"name":"Automation_1","template_script_type":"GeneralScript"}}},{"script_argument_id":14,"script_argument_type":"ScriptArgument","value":[[""]],"script_argument":{"argument":"command","argument_type":"in-text","name":"Name of command","position":"A4:B4","script":{"name":"Automation_1","template_script_type":"GeneralScript"}}},{"script_argument_id":13,"script_argument_type":"ScriptArgument","value":[[""]],"script_argument":{"argument":"password","argument_type":"in-text","name":"Password for remote server - leave blank for public key","position":"A3:B3","script":{"name":"Automation_1","template_script_type":"GeneralScript"}}},{"script_argument_id":12,"script_argument_type":"ScriptArgument","value":[[""]],"script_argument":{"argument":"user","argument_type":"in-text","name":"Login for remote server","position":"A2:B2","script":{"name":"Automation_1","template_script_type":"GeneralScript"}}},{"script_argument_id":11,"script_argument_type":"ScriptArgument","value":[[""]],"script_argument":{"argument":"hosts","argument_type":"in-text","name":"IP address remote server - leave blank for step servers","position":"A1:B1","script":{"name":"Automation_1","template_script_type":"GeneralScript"}}}]},{"aasm_state":"locked","complete_by":null,"component_version":null,"create_new_package_instance":null,"default_tab":null,"description":"Steps from request #1010","different_level_from_previous":true,"estimate":null,"execute_anytime":false,"latest_package_instance":null,"name":"Procedure_3","own_version":false,"owner_type":"User","procedure":true,"protected_step":false,"script_type":null,"should_execute":true,"start_by":null,"suppress_notification":false,"resource_automation_script":null,"owner":{"name":"Administrator, John"},"notes":[],"temporary_property_values":[],"step_script_arguments":[]},{"aasm_state":"locked","complete_by":null,"component_version":null,"create_new_package_instance":false,"default_tab":null,"description":"","different_level_from_previous":true,"estimate":5,"execute_anytime":false,"latest_package_instance":false,"name":"Step_3-1","own_version":false,"owner_type":"User","procedure":false,"protected_step":false,"script_type":"General","should_execute":true,"start_by":null,"suppress_notification":false,"resource_automation_script":[],"component":{"name":"Comp_2"},"owner":{"name":"Administrator, John"},"notes":[],"parent":{"name":"Procedure_3"},"temporary_property_values":[],"script":{"automation_category":"General","automation_type":"Automation","content":"###\n# hosts:\n#   description: IP address remote server - leave blank for step servers\n# user:\n#   description: Login for remote server\n# password:\n#   description: Password for remote server - leave blank for public key\n#   private: yes\n# command:\n#   description: Name of command\n# sudo:\n#   description: Use sudo? (yes or no/blank)\n# arguments:\n#   description: Arguments to script\n###\n\nhosts = params[\"hosts\"]\n\nif hosts.length < 2 # use server list\n  # Get a list of the servers and properties\n  # List is [server_name, {property1=>value1, propery2=>value2 }]\n  hosts = []\n  servers = get_server_list(params)\n  write_to \"Targeting Servers:\"\n  servers.each do |server|\n    write_to \"  #{server[0]}\"\n    hosts << server[0]\n  end\nend  \n\nwrite_to \"Executing on Hosts: #{hosts.inspect}\"\n role :all do # This tells Capistrano to perform the action on an array of hosts\n   hosts\n end\n\n# Run the command on the server\nresults = run_command(params, params[\"command\"], params[\"arguments\"])\n\n# Test the results for success or failure\nsuccess = \"a\" # Note: add your success term here\nunless results.include?(success)\n  write_to \"Success test, looking for #{success}: Command_Failed\"\nelse\n  write_to \"Success test, looking for #{success}: Success (term not found)\"\nend","description":"Runs a command on a host via SSH","name":"SSH_Execute"},"step_script_arguments":[]}]},{"aasm_state":"created","additional_email_addresses":[],"auto_start":false,"description":"","estimate":null,"name":"Request_2","notify_group_only":true,"notify_on_request_cancel":null,"notify_on_request_complete":false,"notify_on_request_hold":false,"notify_on_request_participiant":false,"notify_on_request_planned":false,"notify_on_request_problem":false,"notify_on_request_resolved":false,"notify_on_request_start":false,"notify_on_request_step_owners":false,"notify_on_step_block":false,"notify_on_step_complete":false,"notify_on_step_participiant":false,"notify_on_step_problem":null,"notify_on_step_ready":null,"notify_on_step_requestor_owner":false,"notify_on_step_start":false,"notify_on_step_step_owners":false,"rescheduled":false,"scheduled_at":null,"target_completion_at":null,"wiki_url":"","request_template":{"aasm_state":"released","name":"Request_2temp","automation_scripts_for_export":[null,null,{"aasm_state":"released","automation_category":"General","automation_type":"Automation","content":"###\r\n# command:\r\n#   name: Name of command\r\n# success:\r\n#   name: Term or Phrase to indicate success\r\n###\r\n# Flag the script for direct execution\r\nparams[\"direct_execute\"] = true\r\n\r\n#==============  User Portion of Script ==================\r\n\r\n# Run the command directly on the localhost\r\nresult = run_command(params, params[\"command\"], '')\r\n\r\nparams[\"success\"] = params[\"success\"] || \"\"\r\n\r\n# Apply success or failure criteria\r\nif result.index(params[\"success\"]).nil?\r\n  write_to \"Command_Failed - term not found: [#{params[\"success\"]}]\\n\"\r\nelse\r\n  write_to \"Success - found term: #{params[\"success\"]}\\n\"\r\nend","description":"","name":"Automation_2"},null,null,null]},"environment":{"name":"Env_1"},"notes":[],"business_process":{"name":"Process_1"},"owner":{"name":"Administrator, John"},"requestor":{"name":"Administrator, John"},"email_recipients":[],"package_contents":[],"steps":[{"aasm_state":"locked","complete_by":null,"component_version":null,"create_new_package_instance":false,"default_tab":null,"description":"","different_level_from_previous":true,"estimate":5,"execute_anytime":false,"latest_package_instance":false,"name":"Step_2-4","own_version":false,"owner_type":"User","procedure":false,"protected_step":false,"script_type":null,"should_execute":true,"start_by":null,"suppress_notification":false,"resource_automation_script":null,"owner":{"name":"Administrator, John"},"notes":[],"temporary_property_values":[],"step_script_arguments":[]},{"aasm_state":"locked","complete_by":null,"component_version":null,"create_new_package_instance":false,"default_tab":null,"description":"","different_level_from_previous":true,"estimate":5,"execute_anytime":false,"latest_package_instance":false,"name":"Step_2-1","own_version":false,"owner_type":"User","procedure":false,"protected_step":false,"script_type":null,"should_execute":true,"start_by":null,"suppress_notification":false,"resource_automation_script":null,"owner":{"name":"Administrator, John"},"notes":[],"temporary_property_values":[],"step_script_arguments":[]},{"aasm_state":"locked","complete_by":null,"component_version":null,"create_new_package_instance":false,"default_tab":null,"description":"","different_level_from_previous":true,"estimate":5,"execute_anytime":false,"latest_package_instance":false,"name":"Step_2-2","own_version":false,"owner_type":"User","procedure":false,"protected_step":false,"script_type":"General","should_execute":true,"start_by":null,"suppress_notification":false,"resource_automation_script":[],"component":{"name":"Comp_3"},"owner":{"name":"Administrator, John"},"notes":[],"temporary_property_values":[],"script":{"automation_category":"General","automation_type":"Automation","content":"###\r\n# command:\r\n#   name: Name of command\r\n# success:\r\n#   name: Term or Phrase to indicate success\r\n###\r\n# Flag the script for direct execution\r\nparams[\"direct_execute\"] = true\r\n\r\n#==============  User Portion of Script ==================\r\n\r\n# Run the command directly on the localhost\r\nresult = run_command(params, params[\"command\"], '')\r\n\r\nparams[\"success\"] = params[\"success\"] || \"\"\r\n\r\n# Apply success or failure criteria\r\nif result.index(params[\"success\"]).nil?\r\n  write_to \"Command_Failed - term not found: [#{params[\"success\"]}]\\n\"\r\nelse\r\n  write_to \"Success - found term: #{params[\"success\"]}\\n\"\r\nend","description":"","name":"Automation_2"},"step_script_arguments":[{"script_argument_id":17,"script_argument_type":"ScriptArgument","value":[["ipconfig"]],"script_argument":{"argument":"command","argument_type":"in-text","name":"Name of command","position":"A1:B1","script":{"name":"Automation_2","template_script_type":"GeneralScript"}}},{"script_argument_id":18,"script_argument_type":"ScriptArgument","value":[[""]],"script_argument":{"argument":"success","argument_type":"in-text","name":"Term or Phrase to indicate success","position":"A2:B2","script":{"name":"Automation_2","template_script_type":"GeneralScript"}}}]},{"aasm_state":"locked","complete_by":null,"component_version":null,"create_new_package_instance":false,"default_tab":null,"description":"","different_level_from_previous":true,"estimate":5,"execute_anytime":false,"latest_package_instance":false,"name":"Step_2-3","own_version":false,"owner_type":"User","procedure":false,"protected_step":false,"script_type":null,"should_execute":true,"start_by":null,"suppress_notification":false,"resource_automation_script":null,"owner":{"name":"Administrator, John"},"notes":[],"temporary_property_values":[],"step_script_arguments":[]},{"aasm_state":"locked","complete_by":null,"component_version":null,"create_new_package_instance":null,"default_tab":null,"description":"Steps from request #1010","different_level_from_previous":true,"estimate":null,"execute_anytime":false,"latest_package_instance":null,"name":"Procedure_2","own_version":false,"owner_type":"User","procedure":true,"protected_step":false,"script_type":null,"should_execute":true,"start_by":null,"suppress_notification":false,"resource_automation_script":null,"owner":{"name":"Administrator, John"},"notes":[],"temporary_property_values":[],"step_script_arguments":[]},{"aasm_state":"locked","complete_by":null,"component_version":null,"create_new_package_instance":false,"default_tab":null,"description":"","different_level_from_previous":true,"estimate":5,"execute_anytime":false,"latest_package_instance":false,"name":"Step_2-1","own_version":false,"owner_type":"User","procedure":false,"protected_step":false,"script_type":null,"should_execute":true,"start_by":null,"suppress_notification":false,"resource_automation_script":null,"owner":{"name":"Administrator, John"},"work_task":{"name":"WorkTask_2"},"notes":[],"phase":{"archive_number":null,"archived_at":null,"name":"Phase_2","position":2},"runtime_phase":{"name":"RuntimePhase_3","position":1},"parent":{"name":"Procedure_2"},"temporary_property_values":[],"step_script_arguments":[]}]},{"aasm_state":"created","additional_email_addresses":[],"auto_start":false,"description":"","estimate":null,"name":"Request_3","notify_group_only":true,"notify_on_request_cancel":null,"notify_on_request_complete":false,"notify_on_request_hold":false,"notify_on_request_participiant":false,"notify_on_request_planned":false,"notify_on_request_problem":false,"notify_on_request_resolved":false,"notify_on_request_start":false,"notify_on_request_step_owners":false,"notify_on_step_block":false,"notify_on_step_complete":false,"notify_on_step_participiant":false,"notify_on_step_problem":null,"notify_on_step_ready":null,"notify_on_step_requestor_owner":false,"notify_on_step_start":false,"notify_on_step_step_owners":false,"rescheduled":false,"scheduled_at":null,"target_completion_at":null,"wiki_url":"","request_template":{"aasm_state":"retired","name":"Request_3temp","automation_scripts_for_export":[null,null,null,{"aasm_state":"released","automation_category":"General","automation_type":"Automation","content":"###\n# hosts:\n#   description: IP address remote server - leave blank for step servers\n# user:\n#   description: Login for remote server\n# password:\n#   description: Password for remote server - leave blank for public key\n#   private: yes\n# command:\n#   description: Name of command\n# sudo:\n#   description: Use sudo? (yes or no/blank)\n# arguments:\n#   description: Arguments to script\n###\n\nhosts = params[\"hosts\"]\n\nif hosts.length < 2 # use server list\n  # Get a list of the servers and properties\n  # List is [server_name, {property1=>value1, propery2=>value2 }]\n  hosts = []\n  servers = get_server_list(params)\n  write_to \"Targeting Servers:\"\n  servers.each do |server|\n    write_to \"  #{server[0]}\"\n    hosts << server[0]\n  end\nend  \n\nwrite_to \"Executing on Hosts: #{hosts.inspect}\"\n role :all do # This tells Capistrano to perform the action on an array of hosts\n   hosts\n end\n\n# Run the command on the server\nresults = run_command(params, params[\"command\"], params[\"arguments\"])\n\n# Test the results for success or failure\nsuccess = \"a\" # Note: add your success term here\nunless results.include?(success)\n  write_to \"Success test, looking for #{success}: Command_Failed\"\nelse\n  write_to \"Success test, looking for #{success}: Success (term not found)\"\nend","description":"Runs a command on a host via SSH","name":"SSH_Execute"}]},"environment":{"name":"Env_2"},"notes":[],"business_process":{"name":"Process_1"},"owner":{"name":"Administrator, John"},"requestor":{"name":"Administrator, John"},"email_recipients":[],"package_contents":[],"steps":[{"aasm_state":"locked","complete_by":null,"component_version":null,"create_new_package_instance":false,"default_tab":null,"description":"","different_level_from_previous":true,"estimate":5,"execute_anytime":false,"latest_package_instance":false,"name":"Step_3-1","own_version":false,"owner_type":"User","procedure":false,"protected_step":false,"script_type":null,"should_execute":true,"start_by":null,"suppress_notification":false,"resource_automation_script":null,"owner":{"name":"Administrator, John"},"notes":[],"temporary_property_values":[],"step_script_arguments":[]},{"aasm_state":"locked","complete_by":null,"component_version":null,"create_new_package_instance":false,"default_tab":null,"description":"","different_level_from_previous":true,"estimate":5,"execute_anytime":false,"latest_package_instance":false,"name":"Step_3-2","own_version":false,"owner_type":"User","procedure":false,"protected_step":false,"script_type":null,"should_execute":true,"start_by":null,"suppress_notification":false,"resource_automation_script":null,"owner":{"name":"Administrator, John"},"notes":[],"phase":{"archive_number":null,"archived_at":null,"name":"Phase_4","position":3},"runtime_phase":{"name":"RuntimePhase_5","position":1},"temporary_property_values":[],"step_script_arguments":[]},{"aasm_state":"locked","complete_by":null,"component_version":null,"create_new_package_instance":null,"default_tab":null,"description":"Steps from request #1010","different_level_from_previous":true,"estimate":null,"execute_anytime":false,"latest_package_instance":null,"name":"Procedure_3","own_version":false,"owner_type":"User","procedure":true,"protected_step":false,"script_type":null,"should_execute":true,"start_by":null,"suppress_notification":false,"resource_automation_script":null,"owner":{"name":"Administrator, John"},"notes":[],"temporary_property_values":[],"step_script_arguments":[]},{"aasm_state":"locked","complete_by":null,"component_version":null,"create_new_package_instance":false,"default_tab":null,"description":"","different_level_from_previous":true,"estimate":5,"execute_anytime":false,"latest_package_instance":false,"name":"Step_3-1","own_version":false,"owner_type":"User","procedure":false,"protected_step":false,"script_type":"General","should_execute":true,"start_by":null,"suppress_notification":false,"resource_automation_script":[],"component":{"name":"Comp_2"},"owner":{"name":"Administrator, John"},"notes":[],"parent":{"name":"Procedure_3"},"temporary_property_values":[],"script":{"automation_category":"General","automation_type":"Automation","content":"###\n# hosts:\n#   description: IP address remote server - leave blank for step servers\n# user:\n#   description: Login for remote server\n# password:\n#   description: Password for remote server - leave blank for public key\n#   private: yes\n# command:\n#   description: Name of command\n# sudo:\n#   description: Use sudo? (yes or no/blank)\n# arguments:\n#   description: Arguments to script\n###\n\nhosts = params[\"hosts\"]\n\nif hosts.length < 2 # use server list\n  # Get a list of the servers and properties\n  # List is [server_name, {property1=>value1, propery2=>value2 }]\n  hosts = []\n  servers = get_server_list(params)\n  write_to \"Targeting Servers:\"\n  servers.each do |server|\n    write_to \"  #{server[0]}\"\n    hosts << server[0]\n  end\nend  \n\nwrite_to \"Executing on Hosts: #{hosts.inspect}\"\n role :all do # This tells Capistrano to perform the action on an array of hosts\n   hosts\n end\n\n# Run the command on the server\nresults = run_command(params, params[\"command\"], params[\"arguments\"])\n\n# Test the results for success or failure\nsuccess = \"a\" # Note: add your success term here\nunless results.include?(success)\n  write_to \"Success test, looking for #{success}: Command_Failed\"\nelse\n  write_to \"Success test, looking for #{success}: Success (term not found)\"\nend","description":"Runs a command on a host via SSH","name":"SSH_Execute"},"step_script_arguments":[]}]},{"aasm_state":"created","additional_email_addresses":[],"auto_start":false,"description":"","estimate":null,"name":"Request_5","notify_group_only":true,"notify_on_request_cancel":null,"notify_on_request_complete":false,"notify_on_request_hold":false,"notify_on_request_participiant":false,"notify_on_request_planned":false,"notify_on_request_problem":false,"notify_on_request_resolved":false,"notify_on_request_start":false,"notify_on_request_step_owners":false,"notify_on_step_block":false,"notify_on_step_complete":false,"notify_on_step_participiant":false,"notify_on_step_problem":null,"notify_on_step_ready":null,"notify_on_step_requestor_owner":false,"notify_on_step_start":false,"notify_on_step_step_owners":false,"rescheduled":false,"scheduled_at":null,"target_completion_at":null,"wiki_url":"","request_template":{"aasm_state":"pending","name":"Request_5temp","automation_scripts_for_export":[null,null]},"environment":{"name":"Env_3"},"notes":[],"business_process":{"name":"Process_1"},"owner":{"name":"Administrator, John"},"requestor":{"name":"Administrator, John"},"email_recipients":[],"package_contents":[],"steps":[{"aasm_state":"locked","complete_by":null,"component_version":null,"create_new_package_instance":false,"default_tab":null,"description":"","different_level_from_previous":true,"estimate":5,"execute_anytime":false,"latest_package_instance":false,"name":"Step_5-1","own_version":false,"owner_type":"User","procedure":false,"protected_step":false,"script_type":null,"should_execute":true,"start_by":null,"suppress_notification":false,"resource_automation_script":null,"component":{"name":"Comp_1"},"owner":{"name":"Administrator, John"},"notes":[],"temporary_property_values":[],"step_script_arguments":[]},{"aasm_state":"locked","complete_by":null,"component_version":null,"create_new_package_instance":true,"default_tab":null,"description":"","different_level_from_previous":true,"estimate":5,"execute_anytime":false,"latest_package_instance":false,"name":"Step_5-2","own_version":false,"owner_type":"User","procedure":false,"protected_step":false,"script_type":null,"should_execute":true,"start_by":null,"suppress_notification":false,"resource_automation_script":null,"package":{"name":"Package_1"},"owner":{"name":"Administrator, John"},"notes":[],"temporary_property_values":[],"step_script_arguments":[]}]}],"components":[{"active":true,"name":"Comp_1","active_properties":[{"active":true,"default_value":"02.03","is_private":false,"name":"Property_3"}]},{"active":true,"name":"Comp_2","active_properties":[]},{"active":true,"name":"Comp_3","active_properties":[]},{"active":true,"name":"Comp_4","active_properties":[]}],"environments":[{"active":true,"deployment_policy":"opened","name":"Env_1","active_deployment_window_series":[{"aasm_state":"pending","behavior":"prevent","duration_in_days":0,"finish_at":"2015-12-29T16:00:00-05:00","name":"DW_9","recurrent":false,"start_at":"2015-12-29T09:30:00-05:00","schedule_data":[{"json_string":"null"}],"creator":{"first_name":"John","last_name":"Administrator"}},{"aasm_state":"pending","behavior":"prevent","duration_in_days":0,"finish_at":"2015-12-29T19:00:00-05:00","name":"DW_12","recurrent":false,"start_at":"2015-12-29T10:30:00-05:00","schedule_data":[{"json_string":"null"}],"creator":{"first_name":"John","last_name":"Administrator"}},{"aasm_state":"pending","behavior":"prevent","duration_in_days":0,"finish_at":"2015-12-29T17:30:00-05:00","name":"DW_11","recurrent":false,"start_at":"2015-12-29T10:00:00-05:00","schedule_data":[{"json_string":"null"}],"creator":{"first_name":"John","last_name":"Administrator"}},{"aasm_state":"pending","behavior":"prevent","duration_in_days":0,"finish_at":"2015-12-29T10:00:00-05:00","name":"DW_8","recurrent":false,"start_at":"2014-12-29T09:30:00-05:00","schedule_data":[{"json_string":"null"}],"creator":{"first_name":"John","last_name":"Administrator"}},{"aasm_state":"pending","behavior":"prevent","duration_in_days":0,"finish_at":"2015-12-29T17:00:00-05:00","name":"DW_1","recurrent":false,"start_at":"2015-12-29T07:30:00-05:00","schedule_data":[{"json_string":"null"}],"creator":{"first_name":"John","last_name":"Administrator"}},{"aasm_state":"pending","behavior":"prevent","duration_in_days":0,"finish_at":"2015-12-29T20:00:00-05:00","name":"DW_7","recurrent":false,"start_at":"2015-12-29T09:30:00-05:00","schedule_data":[{"json_string":"null"}],"creator":{"first_name":"John","last_name":"Administrator"}},{"aasm_state":"pending","behavior":"prevent","duration_in_days":0,"finish_at":"2015-12-29T16:00:00-05:00","name":"DW_10","recurrent":false,"start_at":"2015-12-29T09:30:00-05:00","schedule_data":[{"json_string":"null"}],"creator":{"first_name":"John","last_name":"Administrator"}}],"active_server_groups":[{"active":true,"description":"Description ServerGroup_1","name":"ServerGroup_1","active_servers":[{"active":true,"dns":"","ip_address":"","name":"Server_1","os_platform":"","properties":[{"active":true,"default_value":"02.01","is_private":true,"name":"Property_1"}],"current_property_values":[]}]},{"active":true,"description":"Description ServerGroup_2","name":"ServerGroup_2","active_servers":[]}],"active_environment_servers":[{"server":{"active":true,"dns":"","ip_address":"","name":"Server_1","os_platform":"","properties":[{"active":true,"default_value":"02.01","is_private":true,"name":"Property_1"}],"current_property_values":[]}}]},{"active":true,"deployment_policy":"closed","name":"Env_2","active_deployment_window_series":[{"aasm_state":"released","behavior":"allow","duration_in_days":0,"finish_at":"2015-12-29T17:00:00-05:00","name":"DW_2","recurrent":false,"start_at":"2015-12-29T07:30:00-05:00","schedule_data":[{"json_string":"null"}],"creator":{"first_name":"John","last_name":"Administrator"}}],"active_server_groups":[{"active":true,"description":"","name":"ServerGroup_3","active_servers":[]}],"active_environment_servers":[{"server":{"active":true,"dns":"","ip_address":"","name":"Server_2","os_platform":"","properties":[],"current_property_values":[]}}]},{"active":true,"deployment_policy":"opened","name":"Env_3","active_deployment_window_series":[{"aasm_state":"retired","behavior":"prevent","duration_in_days":0,"finish_at":"2015-12-29T17:00:00-05:00","name":"DW_3","recurrent":false,"start_at":"2015-12-29T07:30:00-05:00","schedule_data":[{"json_string":"null"}],"creator":{"first_name":"John","last_name":"Administrator"}}],"active_server_groups":[],"active_environment_servers":[{"server":{"active":true,"dns":"","ip_address":"","name":"Server_4","os_platform":"","properties":[{"active":true,"default_value":"02.02","is_private":false,"name":"Property_2"}],"current_property_values":[]}}]}],"active_packages":[{"instance_name_format":"0.0.0.[#]","name":"Package_1","next_instance_number":1,"properties":[{"active":false,"default_value":"","is_private":false,"name":"Property_5"}],"references":[{"name":"Reference_1","resource_method":"File","uri":"fa","property_values":[],"server":{"name":"Server_2"}}],"package_instances":[]}],"installed_components":[{"location":null,"version":null,"find_properties":[],"server_aspects":[],"server_aspect_groups":[],"application_component":{"different_level_from_previous":true,"position":1,"component":{"active":true,"name":"Comp_1"}},"application_environment":{"name":"Env_1"},"servers":[]},{"location":null,"version":null,"find_properties":[],"server_aspects":[],"server_aspect_groups":[],"application_component":{"different_level_from_previous":true,"position":2,"component":{"active":true,"name":"Comp_2"}},"application_environment":{"name":"Env_1"},"servers":[]},{"location":null,"version":null,"find_properties":[],"server_aspects":[],"server_aspect_groups":[],"application_component":{"different_level_from_previous":true,"position":3,"component":{"active":true,"name":"Comp_3"}},"application_environment":{"name":"Env_1"},"servers":[]},{"location":null,"version":null,"find_properties":[],"server_aspects":[],"server_aspect_groups":[],"application_component":{"different_level_from_previous":true,"position":1,"component":{"active":true,"name":"Comp_1"}},"application_environment":{"name":"Env_3"},"servers":[]},{"location":null,"version":null,"find_properties":[],"server_aspects":[],"server_aspect_groups":[],"application_component":{"different_level_from_previous":true,"position":4,"component":{"active":true,"name":"Comp_4"}},"application_environment":{"name":"Env_3"},"servers":[]}],"active_routes":[{"description":null,"name":"Route_2","route_type":"open","route_gates":[{"description":null,"different_level_from_previous":true,"position":1,"environment":{"name":"Env_1"}}]},{"description":"Description Route_1","name":"Route_1","route_type":"open","route_gates":[{"description":null,"different_level_from_previous":true,"position":1,"environment":{"name":"Env_2"}},{"description":null,"different_level_from_previous":true,"position":2,"environment":{"name":"Env_1"}}]}],"active_business_processes":[{"label_color":"#F0F8FF","name":"Process_1"}],"version_tags":[{"artifact_url":"","name":"VerTag_2","component_name":null,"environment_name":"Env_3"},{"artifact_url":"","name":"VerTag_1","component_name":"Comp_1","environment_name":"Env_1"}],"application_packages":[{"property_values":[],"package":{"name":"Package_1"}}],"active_procedures":[{"aasm_state":"pending","description":"Steps from request #1010","name":"Procedure_1","steps":[{"aasm_state":"locked","complete_by":null,"component_version":null,"create_new_package_instance":null,"default_tab":null,"description":"","different_level_from_previous":true,"estimate":5,"execute_anytime":false,"latest_package_instance":null,"name":"Step_1-1","own_version":false,"owner_type":"User","procedure":false,"protected_step":false,"script_type":null,"should_execute":true,"start_by":null,"suppress_notification":false,"resource_automation_script":null,"component":{"name":"Comp_1"},"owner":{"name":"Administrator, John"},"notes":[],"temporary_property_values":[],"step_script_arguments":[]}]},{"aasm_state":"retired","description":"Steps from request #1010","name":"Procedure_3","steps":[{"aasm_state":"locked","complete_by":null,"component_version":null,"create_new_package_instance":false,"default_tab":null,"description":"","different_level_from_previous":true,"estimate":5,"execute_anytime":false,"latest_package_instance":false,"name":"Step_3-1","own_version":false,"owner_type":"User","procedure":false,"protected_step":false,"script_type":"General","should_execute":true,"start_by":null,"suppress_notification":false,"resource_automation_script":[],"component":{"name":"Comp_2"},"owner":{"name":"Administrator, John"},"notes":[],"temporary_property_values":[],"script":{"automation_category":"General","automation_type":"Automation","content":"###\n# hosts:\n#   description: IP address remote server - leave blank for step servers\n# user:\n#   description: Login for remote server\n# password:\n#   description: Password for remote server - leave blank for public key\n#   private: yes\n# command:\n#   description: Name of command\n# sudo:\n#   description: Use sudo? (yes or no/blank)\n# arguments:\n#   description: Arguments to script\n###\n\nhosts = params[\"hosts\"]\n\nif hosts.length < 2 # use server list\n  # Get a list of the servers and properties\n  # List is [server_name, {property1=>value1, propery2=>value2 }]\n  hosts = []\n  servers = get_server_list(params)\n  write_to \"Targeting Servers:\"\n  servers.each do |server|\n    write_to \"  #{server[0]}\"\n    hosts << server[0]\n  end\nend  \n\nwrite_to \"Executing on Hosts: #{hosts.inspect}\"\n role :all do # This tells Capistrano to perform the action on an array of hosts\n   hosts\n end\n\n# Run the command on the server\nresults = run_command(params, params[\"command\"], params[\"arguments\"])\n\n# Test the results for success or failure\nsuccess = \"a\" # Note: add your success term here\nunless results.include?(success)\n  write_to \"Success test, looking for #{success}: Command_Failed\"\nelse\n  write_to \"Success test, looking for #{success}: Success (term not found)\"\nend","description":"Runs a command on a host via SSH","name":"SSH_Execute"},"step_script_arguments":[]}]},{"aasm_state":"released","description":"Steps from request #1010","name":"Procedure_2","steps":[{"aasm_state":"locked","complete_by":null,"component_version":null,"create_new_package_instance":false,"default_tab":null,"description":"","different_level_from_previous":true,"estimate":5,"execute_anytime":false,"latest_package_instance":false,"name":"Step_2-1","own_version":false,"owner_type":"User","procedure":false,"protected_step":false,"script_type":null,"should_execute":true,"start_by":null,"suppress_notification":false,"resource_automation_script":null,"component":{"name":"Comp_1"},"owner":{"name":"Administrator, John"},"notes":[],"temporary_property_values":[],"step_script_arguments":[]}]}],"brpm_version":"4.6.00.01"}}